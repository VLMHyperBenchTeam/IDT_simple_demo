import streamlit as st

st.set_page_config(page_title="Document sorting demo", page_icon="üßô")

from pathlib import Path
from parse_pdf import convert_pdf_to_images
from pdf_mapper import pdf_to_mappings
from pypdf import PdfReader
from get_page_sorting import get_page_sorting

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
if 'authenticated' not in st.session_state:
    st.session_state.authenticated = False

def login_page():
    """–§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞."""
    placeholder = st.empty()
    
    with placeholder.form("login"):
        st.markdown("#### –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        email = st.text_input("Email")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        submit = st.form_submit_button("–í–æ–π—Ç–∏")
    
    actual_email = "" #"user@example.com"
    actual_password = "" #"securepassword"
    
    if submit:
        if email == actual_email and password == actual_password:
            placeholder.empty()
            st.session_state.authenticated = True
            st.success("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ –∫–∞–∫ {}".format(email))
            st.rerun()
        else:
            st.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

def home_page():
    """–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞."""
    st.title("–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    st.write("–ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç.")

def pdf_sorter_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ PDF."""
    pdf_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç", type=["pdf"])
    if pdf_file is not None:
        with open('uploaded.pdf', 'wb') as temp_input_pdf_file:
            temp_input_pdf_file.write(pdf_file.read())
        image_folder = Path('images')
        image_folder.mkdir(parents=True, exist_ok=True)
        convert_pdf_to_images(pdf_path=Path('uploaded.pdf'), images_folder=image_folder)
        model_answer = get_page_sorting('test.jpg')
        with PdfReader('uploaded.pdf') as reader:
            count_page = len(reader.pages)
        # ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ ...

def about_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'."""
    st.title("–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    st.write("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.")

# –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
def main():
    if not st.session_state.authenticated:
        login_page()
    else:
        selected = st.sidebar.radio(
            "–ú–µ–Ω—é",
            ["–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", "PDF-—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞", "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"],
            key="navigation"  # –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        )
        
        if selected == "–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
            home_page()
        elif selected == "PDF-—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞":
            pdf_sorter_page()
        elif selected == "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏":
            about_page()

if __name__ == "__main__":
    main()